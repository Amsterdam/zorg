swagger: '2.0'

info:
  version: "1.0.0"
  title: Datapunt Amsterdam Zorg
  description: |

    ## Zorg API
    De zorg API bevat informatie over locaties, organisaties en activiteiten die gerelateerd zijn aan zorg en welzijn.

    Opvragen van de Zorg informatie is voor iedereen mogelijk. Voor het toevoegen van informatie is een API token noodzakelijk. Een API token wordt verstrekt door DataPunt beheer.

      ## Opvragen van gegevens
    De volgende informatie kan opgevraagd worden via een lijst of via een zoekingang.
    * organisaties
    * locaties
    * activiteiten

    Er zijn een aantal zoekingangen:
    * vrije zoekterm in naam en/of beschrijving
    * geolocatie
    * lijst met vooraf gedefinieerde labels voor een activiteit (tags)

    ## Toevoegen van gegevens
    DataPunt beheer registreert een account en bijbehorend API token voor een aan te sluiten partij/organisatie. Met het API token kan de organisatie zijn organisatiegegevens toevoegen/wijzigen, en vervolgens locaties en activiteiten toevoegen, wijzigen of weghalen.

    ## Uitleg over de technische sleutels bij elke entiteit

    In request/response berichten komt op een groot aantal plekken de GUID voor: de  is de unieke sleutel van elke entiteit (organisatie, locatie, activiteit) in de applicatie.


     ### Aanmaken technische sleutels
    De API zorgt er zelf voor dat bij het aanmaken van een entiteit, een unieke `guid` wordt toegevoegd aan de entiteit, op basis van het API token en het `id` dat door de gebruiker van de API meegestuurd wordt.
    Op deze wijze kan iedere partij kan dus zijn eigen id reeks gebruiken zonder dat dit leidt tot conflicten in het zorg-portaal.

    * organisatie guid = vastgesteld door DataPunt
    * activiteit guid = `organisatieguid-activiteitid`
    * locatie guid = `organisatieguid-locatieid`

    De gebruikers van de API hoeven dus alleen een `id` mee te sturen, en geen GUID. Indien wel een GUID wordt meegestuurd, zal deze niet gebruikt worden.

    ### Gebruik van technische sleutels

    Bij `update` en `verwijder` opdrachten wordt de `guid` van de desbetreffende entiteit gebruikt  in de URL die aangeroepen wordt, conform REST principe, b.v. `PUT /zorg/activiteit/{guid}/`


    ## Aansluit proces
    1) Partij ontvangt API token van DataPunt beheer

    2) Partij registreert organisatie gegevens. `POST /zorg/organisatie/`

    3) Partij registreert een aantal locaties (met het API token). `POST /zorg/locatie/`

    4) Partij registreert een aantal activiteiten, gekoppeld aan organisatie en locatie (met het API token). `POST /zorg/activiteit/`

    Bij 2, 3 en 4 moet de volgende HTTP header worden meegestuurd:

    `Authorization: Token your_api_token`

    ### Voorbeelden - registreren van gegevens
    `POST /zorg/organisatie/`
    `{
      "id": 12345678901234567891,
      "naam": "Demo",
      "beschrijving": "Demo",
      "afdeling": "Demo",
      "contact":
        {
          "telefoon": {
            "tel1": "01234567890",
            "tel2": "01234567890"
        },
        "website":{
            "home": "http://0.0.0.0"
        }
    }`


    `POST /zorg/locatie/`
    `{
      "id": "7843278492",
      "naam": "demo lokatie",
      "openbare_ruimte_naam": "cultuurlokatie",
      "postcode": "1100",
      "huisnummer": "1",
      "huisletter": "a",
      "huisnummer_toevoeging": "bis",
      "geometrie": "SRID=28992;POINT (120233 488538)"
    }`

    `POST /zorg/activiteit/`
    `{
      "id": "9888943894839",
      "naam": "Demo activiteit",
      "beschrijving": "demo",
      "bron_link": "http://0.0.0.0",
      "contactpersoon": "onbekend",
      "tags": [
        "maandag", "dinsdag", "woensdag"
      ],
      "start_time": "2017-06-13T09:10:37.915Z",
      "end_time": "2017-06-13T09:10:37.915Z",
      "locatie_id": "te01-7843278492",
      "organisatie_id": "te01"
    }`

    De `locatie_id` kan zowel opgegeven worden met/zonder guid prefix, b.v. "te01-7843278492" of "7843278492". In het laatste geval zal de guid aangevuld worden.
    Zie ook sectie 'Uitleg over de technische sleutels bij elke entiteit'.

    ### Bij het opvoeren van een activiteit kunnen een of meer labels (tags) worden meegegeven.
    De lijst met mogelijke labels is op dit moment:

    Leeftijdscategorie: volwassene, senior, jeugd

    Kosten: gratis, betaald

    Dag: maandag, dinsdag, woensdag, donderdag, vrijdag, zaterdag, zondag,

    Tijdstip: ochtend, middag, avond, nacht

    Deze kunnen ook opgevraagd worden met de API calls. `GET /zorg/tags/DAG`,  `GET /zorg/tags/TIJD`, `GET zorg/tags/BETAALD`, en `GET zorg/tags/LEEFTIJDSCATEGORIE`


    ### Voorbeelden - zoeken van gegevens
    Zoeken op vrije zoekterm
    `GET` /zorg/zoek/?query=yoga

    Zoeken op label
    `GET` /zorg/zoek/?tag=maandag&tag=dinsdag

    Zoeken op geolocatie
    `GET` /zorg/zoek/?lat=4.89371750163616&lon=52.37329259288013

    ## Automatische suggesties
    Het endpoint `/zorg/typeahead/` kan gebruikt worden om op basis van een of meerdere karakters een suggestie te geven voor een zoekterm, zoals die in een 'naam' of 'beschrijving' voorkomt. Zo laat bijvoorbeeld de query `GET /zorg/typeahead?query=yog` een lijst zien met alle mogelijk termen die beginnen met 'yog'.

schemes:
  - https

consumes:
  - application/json

produces:
  - application/json

################################################################################
#                                     Paths                                    #
################################################################################

paths:
  /zorg/status/health:
    get:
      tags: [ status ]
      # operationId: health.views.health
      summary: Ok, als de server draait
      responses:
        200:
          description: status health check
          schema:
            type: string
        500:
          description: server error
          schema:
            $ref: '#/definitions/error_response'

  /zorg/status/data:
    get:
      tags: [ status ]
      summary: Ok, als data bereikbaar is.
      # operationId: health.views.data
      responses:
        200:
          description: status data health check
          schema:
            type: string
        500:
          description: server error
          schema:
            $ref: '#/definitions/error_response'

  /zorg/batch_update:
    post:
      tags: [ batch ]
      description: |
        ### Batch update

        #### In ontwikkeling

        batch_update accepteert een payload met zgn. `operaties`. Deze operaties worden uitgevoerd op onze datacollectie.

        Een operatie bestaat altijd uit een key `operatie` met als de mogelijk waarden:
          - `insert`,
          - `patch` of
          - `delete`.

        een key `locatie` en een key `activiteit`.

        ### bijvoorbeeld:
        ```javascript
          [
            {"operatie":"insert",
             "locatie": <locatie-rec>,
             "activiteit": <activiteit-rec>},
            {"operatie":"patch",
             "locatie": <locatie-changes>,
             "activiteit": <activiteit-changes>},
            {"operatie":"delete":
             "locatie": <locatie-guid>,
             "activiteit": <activiteit-guid>}
          ]
        ```

      summary: Aanleveren van wijzigingen in een batch
      responses:
        202:
          description: accepted the request and queued the payload for processing
          schema:
            $ref: '#/definitions/batch_job'
        500:
          description: server error
      parameters:
      -
        name: payload
        in: body
        description: The payload for this request
        schema:
          type: array
          items:
            $ref: '#/definitions/batch_record'

  /zorg/batch_job/{jobid}:
    get:
      tags: [  batch ]
      summary: opvragen van informatie over batch jobs
      description: |
        #### In ontwikkeling

      parameters:
      -
        name: jobid
        in: path
        description: De jobid van de verwerking die gezocht wordt
        type: string
        required: true
      responses:
        200:
          description: batch
          schema:
            $ref: '#/definitions/batch_job'
        500:
          description: server error

  /zorg/tags/{categorie}/:
    get:
      tags: [ tags ]
      summary: opvragen van tags cq. labels per categorie
      parameters:
      -
        name: categorie
        in: path
        description: de tag categorie die geselecteerd moet worden
        type: string
        enum:
          - BETAALD
          - DAG
          - TIJD
          - LEEFTIJDSCATEGORIE
        required: true
      responses:
        200:
          description: alle tags voor gevraagde categoroe
          schema:
            $ref: '#/definitions/tagdefinitie'
        500:
          description: server error

  /zorg/zoek/:
    get:
      tags: [ zoekingangen ]
      summary: |
        Zoek over alle data in het systeem. Als `lat` en `lon` gegeven zijn dan
        worden de resultaten primair gesorteerd op afstand.
      # operationId: api.ZoekApiView.as_view
      parameters:
      - $ref: '#/parameters/query'
      - $ref: '#/parameters/tag'
      - $ref: '#/parameters/latitude'
      - $ref: '#/parameters/longitude'
      responses:
        200:
          $ref: '#/responses/200-zoek'
        500:
          $ref: '#/responses/500'

  /zorg/zoek/{subtype}:
    get:
      tags: [ zoekingangen ]
      summary: |
        Zoek over de `subtype` data in het systeem. Als `lat` en `lon` gegeven
        zijn dan worden de resultaten primair gesorteerd op afstand.
      # operationId: api.ZoekApiView.as_view
      parameters:
      - $ref: '#/parameters/query'
      - $ref: '#/parameters/tag'
      - $ref: '#/parameters/latitude'
      - $ref: '#/parameters/longitude'
      -
        name: subtype
        in: path
        description: '`organisatie`, `locatie` of `activiteit`'
        type: string
        required: true
        enum:
          - organisatie
          - locatie
          - activiteit
      responses:
        200:
          $ref: '#/responses/200-zoek'
        500:
          $ref: '#/responses/500'



  /zorg/organisatie/{guid}/:
    get:
      tags: [ organisaties ]
      summary: Toon de organisatie met deze guid
      produces:
        - application/json
      parameters:
      -
        name: guid
        in: path
        description: Paginering, toont de gevraagde pagina.
        type: string
        required: true
      responses:
        200:
          description: retourneert een `organisatie` data record
          schema:
            $ref: '#/definitions/organisatie'
        500:
          $ref: '#/responses/500'
    put:
      tags: [ organisaties ]
      summary: Wijzig de gegevens van de organisatie met deze guid
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
      - name: guid
        in: path
        description: De guid van het organisatie object dat gewijzigd moet worden
        type: string
        required: true
      - in: body
        name: body
        description: wijzig `organisatie` object
        required: false
        schema:
          $ref: '#/definitions/organisatie'
      responses:
        "405":
          description: Validation error
        "404":
          description: Activiteit not found
        "400":
          description: Bad request, invalid URL
        "200":
          description: Update successful
    delete:
      tags: [ organisaties ]
      summary: Verwijder de organisatie met deze guid
      parameters:
      - name: guid
        in: path
        description: Het guid van de organisatie die verwijderd gaat worden
        type: string
        required: true
      responses:
        "200":
          description: Delete successful

  /zorg/organisatie/:
    get:
      tags: [ organisaties ]
      summary: Toon de lijst met organisaties
      # operationId: api.datasets.normailzed.views.OrganisatieViewSet
      produces:
        - application/json
      parameters:
      -
        name: page
        in: query
        description: Paginering, toont de gevraagde pagina.
        type: number
        format: int64
        required: false
      responses:
        200:
          description: Retourneert een lijst met organisaties
          schema:
            type: object
            properties:
              _links:
                $ref: '#/definitions/_links'
              results:
                type: array
                items:
                  $ref: '#/definitions/results'
        500:
          description: server error
          schema:
            $ref: '#/definitions/error_response'
    post:
      tags: [ organisaties ]
      summary: Voeg een nieuwe organisatie toe
      produces:
        - application/json
      parameters:
      -
        in: body
        name: body
        description: Toevoegen van een nieuw organsatie object
        required: true
        schema:
          $ref: '#/definitions/organisatie-post'
      responses:
        201:
          description: Nieuwe organisatie is toegevoegd
          schema:
            $ref: '#/definitions/organisatie'
        500:
          description: server error
          schema:
            $ref: '#/definitions/error_response'

  /zorg/activiteit/{guid}/:
    get:
      tags: [ activiteiten ]
      summary: Toon de activiteit met deze guid
      produces:
        - application/json
      parameters:
      -
        name: guid
        in: path
        description: Paginering, toont de gevraagde pagina
        type: string
        required: true
      responses:
        200:
          description: Retourneert een activeit data record
          schema:
            $ref: '#/definitions/activiteit'
        500:
          description: server error
          schema:
            $ref: '#/definitions/error_response'
    put:
      tags: [ activiteiten ]
      summary: Wijzig de gegevens van activiteit met deze guid
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
      - name: guid
        in: path
        description: Het guid van de activiteit die gewijzigd gaat worden
        type: string
        required: true
      - in: body
        name: body
        description: wijzig activiteit object
        required: false
        schema:
          $ref: "#/definitions/activiteit-post"
      responses:
        "405":
          description: Validation error
        "404":
          description: Activiteit not found
        "400":
          description: Bad request, invalid URL
        "200":
          description: Update successful
    delete:
      tags: [ activiteiten ]
      summary: Verwijder de activiteit met deze guid
      parameters:
      - name: guid
        in: path
        description: Het guid van de activiteit die verwijderd gaat worden
        type: string
        required: true
      responses:
        "200":
          description: Delete successful

  /zorg/activiteit/:
    get:
      tags: [ activiteiten  ]
      summary: Toon de lijst met activiteiten
      # operationId: api.datasets.normailzed.views.OrganisatieViewSet
      produces:
        - application/json
      parameters:
      -
        name: page
        in: query
        description: Paginering, toont de gevraagde pagina.
        type: number
        format: int64
        required: false
      responses:
        200:
          description: Retourneert een lijst met activiteiten.
          schema:
            type: object
            properties:
              _links:
                $ref: '#/definitions/_links'
              results:
                type: array
                items:
                  $ref: '#/definitions/results'
        500:
          description: server error
          schema:
            $ref: '#/definitions/error_response'
    post:
      tags: [ activiteiten  ]
      summary: Voeg een nieuwe activiteit toe
      produces:
        - application/json
      parameters:
      -
        in: body
        name: body
        description: Toevoegen van een nieuw activiteit object
        required: true
        schema:
          $ref: '#/definitions/activiteit-post'
      responses:
        201:
          description: Nieuwe activiteit is toegevoegd
          schema:
            type: object
        500:
          description: server error
          schema:
            $ref: '#/definitions/error_response'

  /zorg/locatie/{guid}/:
    get:
      tags: [ locaties  ]
      summary: Toon de locatie met deze guid
      produces:
        - application/json
      parameters:
      -
        name: guid
        in: path
        description: Paginering, toont de gevraagde pagina
        type: string
        required: true
      responses:
        200:
          description: retourneert een locatie data record
          schema:
            $ref: '#/definitions/locatie'
        500:
          description: server error
          schema:
            $ref: '#/definitions/error_response'

    put:
      tags: [ locaties ]
      summary: Wijzig de gegevens van de locatie met deze guid
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
      - name: guid
        in: path
        description: Het guid van de locatie die gewijzigd gaat worden
        type: string
        required: true
      - in: body
        name: body
        description: wijzig locatie object
        required: false
        schema:
          $ref: "#/definitions/locatie"
      responses:
        "405":
          description: Validation error
        "404":
          description: Locatie not found
        "400":
          description: Bad request, invalid URL
        "200":
          description: Update successful
    delete:
      tags: [ locaties ]
      summary: Verwijder de locatie met deze guid
      parameters:
      - name: guid
        in: path
        description: Het guid van de locatie die gewijzigd gaat worden
        type: string
        required: true
      responses:
        "200":
          description: Delete successful

  /zorg/locatie/:
    get:
      tags: [ locaties ]
      summary: Toon de lijst met locaties
      # operationId: api.datasets.normailzed.views.OrganisatieViewSet
      produces:
        - application/json
      parameters:
      -
        name: page
        in: query
        description: Paginering, toont de gevraagde pagina
        type: number
        format: int64
        required: false
      responses:
        200:
          description: Retourneert een lijst met locatie data
          schema:
            type: object
            properties:
              _links:
                $ref: '#/definitions/_links'
              results:
                type: array
                items:
                  $ref: '#/definitions/results'
        500:
          description: server error
          schema:
            $ref: '#/definitions/error_response'
    post:
      tags: [ locaties ]
      summary: Voeg een nieuwe locatie toe
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
      -
        in: body
        name: body
        description: Toevoegen van een nieuw locatie object. Formaat van het optionele `geometrie` attribuut is `SRID=28992;POINT (120233 488538)`.
        required: true
        schema:
          $ref: '#/definitions/locatie-post'
      responses:
        201:
          description: Nieuwe activiteit is toegevoegd
          schema:
            type: object
        500:
          description: server error
          schema:
            $ref: '#/definitions/error_response'

  /zorg/typeahead/:
    get:
      tags: [ zoeksuggesties/autocomplete ]
      summary: |
        Geef een lijst met suggesties voor zoektermen op basis van een of meer karakters.
      parameters:
      - $ref: '#/parameters/query'
      responses:
        200:
          description: Lijst met suggesties voor zoektermen
          schema:
            type: array
            items:
              type: string
        500:
          $ref: '#/responses/500'


#  /zorg/persoon:
#    get:
#      tags: [ persoon  ]
#      summary: data persoon
#      produces:
#        - application/json
#      parameters:
#      -
#        name: page
#        in: query
#        description: Paginering, toont de gevraagde pagina
#        type: number
#        format: int64
#        required: false
#      responses:
#        200:
#          description: Retourneert een lijst met contactpersoon data
#          schema:
#            type: object
#            properties:
#              _links:
#                $ref: '#/definitions/_links'
#              results:
#                type: array
#                items:
#                  $ref: '#/definitions/persoon'
#        500:
#          description: server error
#          schema:
#            $ref: '#/definitions/error_response'
#    post:
#      tags: [ persoon ]
#      summary: Voeg een nieuwe contactpersoon  toe
#      produces:
#        - application/json
#      consumes:
#        - application/json
#      parameters:
#      -
#        in: body
#        name: body
#        description: Toevoegen van een nieuw contactpersoon object
#        required: true
#        schema:
#          $ref: '#/definitions/persoon'
#      responses:
#        201:
#          description: Nieuw contactpersoon is toegevoegd
#          schema:
#            type: object
#        500:
#          description: server error
#          schema:
#            $ref: '#/definitions/error_response'


parameters:
  query:
    name: query
    in: query
    description: de woorden / delen van woorden waarop gezocht wordt
    type: string
    required: false
  tag:
    name: tag
    in: query
    description: zoek naar een tag (bijvoorbeeld `tag=betaald` of `tag=maandag`)
    required: false
    type: string
  latitude:
    name: lat
    in: query
    description: latitude (heeft alleen effect als `lon` ook aanwezig is)
    required: false
    type: number
  longitude:
    name: lon
    in: query
    description: longitude (heeft alleen effect als `lat` ook aanwezig is)
    required: false
    type: number


responses:
  200-zoek:
    description: |
        Retourneert een lijst met zoekresulaten conform de Elastic v5 Search API. Elk zoekresultaat bestaat uit een organisatie, locatie of activiteit, elk met hun eigen set van properties\:
        _________________________________

        Organisatie
        * naam
        * beschrijving
        * afdeling
        * ext_id

        Locatie
        * naam
        * openbare_ruimte_naam
        * huisnummer
        * huisnummer_toevoeging
        * postcode
        * centroid.lat
        * centroid.lon
        * ext_id

        Activiteit
        * naam
        * beschrijving
        * bron_link
        * tags
        * ext_id
        * locatie
            * naam
            * openbare_ruimte_naam
            * huisnummer
            * huisnummer_toevoeging
            * postcode
            * centroid.lat
            * centroid.lon
            * ext_id


    schema:
      type: object
      properties:
        took:
          type: number
          format: int64
        timed_out:
          type: boolean
        _shards:
          type: object
          properties:
            total:
              type: number
              format: int64
            successful:
              type: number
              format: int64
            failed:
              type: number
              format: int64
        hits:
          type: array
          items:
            type: object
            properties:
              total:
                type: number
                format: int64
              max_score:
                type: number
                format: float
              hits:
                type: array
                items:
                  type: object
                  properties:
                    _index:
                      type: string
                    _type:
                      type: string
                      enum: [activiteit, organisatie, locatie]
                    _id:
                      type: string
                    _score:
                      type: number
                      format: int64
                    _source:
                      type: object
                      properties:
                        naam:
                          type: string
                        beschrijving:
                          type: string

      example:
        took: 2
        timed_out: false
        _shards:
          total: 5
          successful: 5
          failed: 0
        hits:
          total: 4
          max_score: 1
          hits:
            - _index: zorg
              _type: organisatie
              _id: te01
              _score: 1
              _source:
                naam: Demo organisatie
                beschrijving: Demo organisatie
                afdeling: customer support
                ext_id: '12345678901234567891'
            - _index: zorg
              _type: activiteit
              _id: abcd-12345678
              _score: 1
              _source:
                naam: Demo activiteit
                beschrijving: Demo activiteit
                bron_link: 'http://0.0.0.0'
                tags:
                  - maandag
                  - woensdag
                ext_id: '123456789'
                locatie:
                  naam: Demo locatie
                  openbare_ruimte_naam: Demo
                  huisnummer: '1'
                  huisnummer_toevoeging: 'a'
                  postcode: '1012JS'
                  centroid:
                    lat: 4.89371750163616
                    lon: 52.37329259288013
                  ext_id: '123456789'
            - _index: zorg
              _type: locatie
              _id: abcd-123456789
              _score: 1
              _source:
                naam: Demo locatie
                openbare_ruimte_naam: Demo locatie
                huisnummer: '1'
                huisnummer_toevoeging: 'b'
                postcode: 1012JS
                centroid:
                  lat: 4.89371750163616
                  lon: 52.37329259288013
                ext_id: '12345678'





  500:
    description: server error
    schema:
      $ref: '#/definitions/error_response'

################################################################################
#                                  Definitions                                 #
################################################################################

definitions:

  organisatie-post:
    type: object
    required:
      - id
      - naam
    properties:
      id:
        type: string
      naam:
        type: string
      beschrijving:
        type: string
      afdeling:
        type: string
      contact:
        description: |
          een lijst met adressen, bijv
          [{"soort":"email", "adres":"voorbeeld@domain.dom"},
           {"soort":"twitter", "adres":"@voorbeeld"}]
        type: array
        items:
            $ref: '#/definitions/comm'
      locatie_id:
        type: string

  organisatie:
    type: object
    required:
      - id
      - guid
      - naam
    properties:
      id:
        type: string
      guid:
        type: string
      naam:
        type: string
      beschrijving:
        type: string
      afdeling:
        type: string
      contact:
        type: array
        items:
            $ref: '#/definitions/comm'
        description: |
          Een lijst met adressen, Voorbeeld:
          [{"soort":"email", "adres":"voorbeeld@domain.dom"},
          {"soort":"twitter", "adres":"@voorbeeld"}]
      locatie_id:
        type: string

  locatie-post:
    type: object
    required:
      - id
      - naam
      - postcode
    properties:
      id:
        type: string
      naam:
        type: string
      openbare_ruimte_naam:
        type: string
      postcode:
        type: string
      huisnummer:
        type: string
      huisletter:
        type: string
      huisnummer_toevoeging:
        type: string
      geometrie:
        type: string

  locatie:
    type: object
    required:
      - id
      - guid
      - naam
    properties:
      id:
        type: string
      guid:
        type: string
      naam:
        type: string
      openbare_ruimte_naam:
        type: string
      postcode:
        type: string
      huisnummer:
        type: string
      huisletter:
        type: string
      huisnummer_toevoeging:
        type: string
      bag_link:
        type: string
      geometrie:
        type: string

  activiteit-post:
    type: object
    required:
      - id
      - naam
    properties:
      id:
        type: string
      naam:
        type: string
      beschrijving:
        type: string
      bron_link:
        type: string
      contactpersoon:
        type: string
      tags:
        type: array
        description: een array van labels / tags passend bij deze activiteit.
        items:
          type: string
      start_time:
        type: string
        format: date-time
        description: Datum / tijd waarop deze activiteit ingaat / aanvangt.
      end_time:
        type: string
        format: date-time
        description: Datum / tijd waarop deze activiteit stopt.
      locatie_id:
        type: string
        description: De `locatie-guid` zoals het bekend is bij het zorg portaal.
      organisatie_id:
        type: string
        description: De `organisatie-id` zoals het bekend is bij het zorg portaal.

  activiteit:
    type: object
    required:
      - id
      - guid
      - naam
    properties:
      id:
        type: string
      guid:
        type: string
      naam:
        type: string
      beschrijving:
        type: string
      bron_link:
        type: string
      contactpersoon:
        type: string
      persoon:
        type: array
        items:
          type: string
      tags:
        type: array
        description: een array van labels / tags passend bij deze activiteit.
        items:
          type: string
      start_time:
        type: string
        format: date-time
        description: Datum / tijd waarop deze activiteit ingaat / aanvangt.
      end_time:
        type: string
        format: date-time
        description: Datum / tijd waarop deze activiteit stopt.
      locatie_id:
        type: string
        description: De `locatie-id` zoals het bekend is bij het zorg portaal.
      organisatie_id:
        type: string
        description: De `organisatie-id` zoals het bekend is bij het zorg portaal.

#  persoon:
#    type: object
#    properties:
#      guid:
#        type: string
#      contact:
#        description: |
#          een lijst met adressen, bijv
#          [{"soort":"email", "adres":"voorbeeld@domain.dom"},
#           {"soort":"twitter", "adres":"@voorbeeld"}]
#        type: array
#        items:
#            $ref: '#/definitions/comm'
#      naam:
#        type: string

  comm:
    type: object
    properties:
      soort:
        type: string
      adres:
        type: string

  href:
    type: object
    properties:
      href:
        type: string

  _links:
    type: object
    properties:
      self:
        $ref: '#/definitions/href'
      next:
        $ref: '#/definitions/href'
      prev:
        $ref: '#/definitions/href'

  results:
    type: object
    allOf:
      - $ref: '#/definitions/activiteit'
      - $ref: '#/definitions/locatie'
      - $ref: '#/definitions/organisatie'

  error_response:
    type: object
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: string

  batch_record:
    type: object
    properties:
      operatie:
        type: string
        enum:
          - insert
          - update
          - delete
      locatie:
        $ref: '#/definitions/locatie'
      activiteit:
        $ref: '#/definitions/activiteit'

  batch_job:
    type: object
    properties:
      jobid:
        type: number
        format: int64
      guid:
        type: string
      status:
        type: string
        enum:
           - queued
           - running
           - success
           - failed
      result:
        type: object
        properties:
          added:
            type: number
            format: int64
          updated:
            type: number
            format: int64
          deleted:
            type: number
            format: int64
          messages:
            type: string

  tagdefinitie:
    type: object
    properties:
      category:
        type: string
        enum:
          - BETAALD
          - DAG
          - TIJD
      naam:
        type: string
